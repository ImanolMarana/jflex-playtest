# Copyright 2023, Gerwin Klein, R√©gis D√©camps, Steve Rowe
# SPDX-License-Identifier: BSD-3-Clause

name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

env:
  PUBLISH_SOURCES: 'true'

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ImanolMarana_jflex-playtest

  bazel:
    name: 'Bazel'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.cache/bazel
        # We store new cache content for each new commit sha, but load the cache
        # from any last run, because bazel is fairly good at figuring out diffs.
        # Per GitHub policy, PRs will only get caches from the base branch, not
        # from each other, and the base branch will not see the cache from PRs.
        key: ${{ runner.os }}-bazel-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-bazel-
    - name: 'Info'
      run: bazel --bazelrc=.ci.bazelrc info release
    - name: 'Unit Tests'
      run: bazel --bazelrc=.ci.bazelrc test //jflex/...
    - name: 'Integration+Regression Tests'
      run: bazel --bazelrc=.ci.bazelrc test //javatests/...
    - name: 'Build all'
      run: bazel --bazelrc=.ci.bazelrc build //...
    - name: 'Test all'
      run: bazel --bazelrc=.ci.bazelrc test //...
    - name: 'Build artifact'
      run: bazel --bazelrc=.ci.bazelrc build jflex/jflex_bin_deploy.jar
    - name: 'Check aggregated sources'
      run: |
        bazel --bazelrc=.ci.bazelrc build //jflex:jflex_bin_deploy-src.jar //jflex:resources
        mkdir -p jflex_bin_deploy; cd jflex_bin_deploy
        cp ../scripts/compile-aggregated-java-sources.sh compile.sh
        jar -xf ../bazel-bin/jflex/jflex_bin_deploy-src.jar
        jar -xf ../bazel-bin/jflex/libresources.jar
        ./compile.sh
        ls jflex/Main.class

  regression:
    name: 'Regression'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        java: [ 8, 11, 17 ]
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java }}
        distribution: zulu
        cache: maven
    - name: 'üìù Regression tests'
      run: |
        scripts/mvn-install-fastbuild.sh jflex-maven-plugin,testsuite/jflex-testsuite-maven-plugin
        scripts/test-regression.sh

  javadoc:
    name: Javadoc
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 11, 17 ]
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java }}
        distribution: zulu
        cache: maven
    - name: 'üî® Build JFlex jar'
      run: |
        mvn -Pfastbuild install
    - name: 'üìù Javadoc'
      run: |
        mvn javadoc:javadoc

  docs:
    name: 'Docs'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: 'Install LaTeX and pandoc'
      run: |
        sudo apt-get install \
             pandoc pandoc-citeproc texlive texlive-latex-extra lmodern
    - name: "üìÑ Documentation"
      run: cd docs; make
